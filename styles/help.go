package styles

import "github.com/charmbracelet/lipgloss"

var (
	HelpKeyStyle   = helpKey()
	HelpDescStyle  = helpDesc()
	HelpTitleStyle = helpTitle()
	HelpBoxStyle   = helpBox()
)

/////////////////////////////////////////////////////////////////////////////////////////////
//
//  @Brief			RefreshHelpStyles refreshes help styles based on current theme.
//
//	@Description	Should be called after theme changes
//
/////////////////////////////////////////////////////////////////////////////////////////////
func RefreshHelpStyles() {
	HelpKeyStyle = helpKey()
	HelpDescStyle = helpDesc()
	HelpTitleStyle = helpTitle()
	HelpBoxStyle = helpBox()
}

/////////////////////////////////////////////////////////////////////////////////////////////
//
//  @Brief			accent creates an accent-colored style.
//
//	@Return			lipgloss.Style	Accent style
//
/////////////////////////////////////////////////////////////////////////////////////////////
func accent() lipgloss.Style {
	return lipgloss.NewStyle().Foreground(CurrentTheme.BorderColor)
}

/////////////////////////////////////////////////////////////////////////////////////////////
//
//  @Brief			secondary creates a secondary-colored style.
//
//	@Return			lipgloss.Style	Secondary style
//
/////////////////////////////////////////////////////////////////////////////////////////////
func secondary() lipgloss.Style {
	return lipgloss.NewStyle().Foreground(CurrentTheme.SecondaryColor)
}

/////////////////////////////////////////////////////////////////////////////////////////////
//
//  @Brief			bordered creates a style with rounded borders.
//
//	@Return			lipgloss.Style	Bordered style
//
/////////////////////////////////////////////////////////////////////////////////////////////
func bordered() lipgloss.Style {
	return lipgloss.NewStyle().
		Border(lipgloss.RoundedBorder()).
		BorderForeground(CurrentTheme.BorderColor)
}

/////////////////////////////////////////////////////////////////////////////////////////////
//
//  @Brief			helpKey creates the style for keyboard keys in help.
//
//	@Return			lipgloss.Style	Key style (bold accent)
//
/////////////////////////////////////////////////////////////////////////////////////////////
func helpKey() lipgloss.Style {
	return accent().Bold(true)
}

/////////////////////////////////////////////////////////////////////////////////////////////
//
//  @Brief			helpDesc creates the style for descriptions in help.
//
//	@Return			lipgloss.Style	Description style (secondary color)
//
/////////////////////////////////////////////////////////////////////////////////////////////
func helpDesc() lipgloss.Style {
	return secondary()
}

/////////////////////////////////////////////////////////////////////////////////////////////
//
//  @Brief			helpTitle creates the style for help dialog title.
//
//	@Return			lipgloss.Style	Title style (bold, centered)
//
/////////////////////////////////////////////////////////////////////////////////////////////
func helpTitle() lipgloss.Style {
	return accent().MarginBottom(1).Bold(true).Align(lipgloss.Center)
}

/////////////////////////////////////////////////////////////////////////////////////////////
//
//  @Brief			helpBox creates the style for help dialog container.
//
//	@Return			lipgloss.Style	Box style with padding and border
//
/////////////////////////////////////////////////////////////////////////////////////////////
func helpBox() lipgloss.Style {
	totalWidth := CurrentTheme.LeftPanelWidth + CurrentTheme.RightPanelWidth
	return bordered().Padding(1, 3).Margin(1).Width(totalWidth)
}
